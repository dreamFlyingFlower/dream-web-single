spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/dream_single_web?autoReconnect=true&useUnicode=true&useSSL=false&characterEncoding=UTF8&tinyInt1isBit=false&allowMultiQueries=true
    username: root
    password: 123456

# Spring Boot Admin 配置
  boot:
    admin:
      # Spring Boot Admin Server 服务端地址
      context-path: /monitor/admin
      client:
        # 指定 Spring Boot Admin Server 服务端地址
        url: http://127.0.0.1:${server.port}/${spring.boot.admin.context-path}
        instance:
          service-host-type: IP

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  # OpenAPI文档相关参数
  api-docs:
    # OpenAPI文档开关,true:开启OpenAPI文档访问功能,false:关闭
    enabled: true
    # JSON格式的OpenAPI文档的访问路径
    path: /v3/api-docs
  # 扫描哪些包来生成OpenAPI文档,多个包名用逗号分隔
  #packages-to-scac: 
  # 路径匹配规则, API路径符合这些匹配规则才会包含到OpenAPI文档中, 多个规则用逗号分隔
  #paths-to-match: /*
  # 返回媒体类型匹配规则, 返回媒体类型符合这些匹配规则才会包含到OpenAPI文档中,多个规则用逗号分隔
  #produces-to-match: /*
  # 请求头匹配规则, 请求头符合这些匹配规则才会包含到OpenAPI文档中, 多个规则用逗号分隔
  #headers-to-match: /*
  # 请求媒体类型匹配规则, 请求媒体类型符合这些匹配规则才会包含到OpenAPI文档中, 多个规则用逗号分隔
  #consumes-to-match: /*
  # 排除路径匹配规则, API路径符合这些匹配规则会排除在OpenAPI文档之外, 多个规则用逗号分隔
  #paths-to-exclude: 
  # 排除包匹配规则, 包名符合这些匹配规则会排除在OpenAPI文档之外, 多个规则用逗号分隔
  #packages-to-exclude: 
  # 默认请求媒体类型
  #default-consumes-media-type: application/json
  # 默认返回的响应媒体类型
  #default-produces-media-type: '*/*'
  # 是否禁用OpenAPI文档缓存,禁用后每次访问${springdoc.api-docs.path}都会重新生成(适合开发调试阶段)当响应会比较缓慢
  #cache.disabled: false
  # 是否显示Spring Actuator的接口
  #show-actuator: false
  # 是否自动将类名生成为Tag
  #auto-tag-classes: true
  # 是否包含返回ModelAndView对象的接口
  #model-and-view-allowed: false
  # 是否从 @ControllerAdvice 注解获取接口的响应信息
  #override-with-generic-response: true
  # 是否开启接口分组功能, 开启后, 一个App可以生成多个OpenAPI文档, 每个文档显示一部分接口
  #api-docs.groups.enabled: true
  # webjar资源的访问路径前缀
  #webjars.prefix: /webjars
  # 是否翻译属性值, true: Schema中的属性的值可以用Spring的表达式来编写, 然后运行时自动转成真实的取值
  #api-docs.resolve-schema-properties: false
  # 删除无效的引用定义
  #remove-broken-reference-definitions: true
  # 是否格式化输出的OpenAPI文档, 方便人类阅读
  #writer-with-default-pretty-printer: false
  # 是否启用 deprecating model converter.
  #model-converters.deprecating-converter.enabled: true
  # 生成的Schema等组件的名称是否使用全名.FQN是指 fully qualified names
  #use-fqn: false
  # 是否显示spring security的登录接口
  #show-login-endpoint: false
  # 是否预加载OpenAPI文档, true: 程序启动的时候就生成OpenAPI文档, false: 第一次访问OpenAPI文档的时候生成
  #pre-loading-enabled: false
  # 分组配置
  group-configs:
    # 分组名称
    - group: 'system'
      # 同`springdoc.paths-to-match`
      paths-to-match: '/**'
      packages-to-scan: com.dream.system.controller
      display-name: '系统API'
      # 同`springdoc.packages-to-scan
      #packages-to-scan: 
      # 同`springdoc.paths-to-exclude`
      #paths-to-exclude: ''
      # 同`springdoc.packages-to-exclude`
      #packages-to-exclude: 
      # 同`springdoc.produces-to-match`
      #produces-to-match: /*
      # 同`springdoc.consumes-to-match`
      #consumes-to-match: /*
      # 同`springdoc.headers-to-match`
      #headers-to-match: /*
# knife4j的增强配置,不需要增强可以不配
knife4j:
  enable: true
  # 正式环境为true
  production: false
  setting:
    language: zh_cn
    custom-code: 500
    enable-footer: true
    enable-footer-custom: true
    footer-custom-content: Apache License 2.0 | Copyright  2023-[飞花梦影](https://github.com/dreamFlyingFlower/dream-single-web)


    
dream:
  security:
    http-ignore-resources:
    - /sys/auth/captcha
    - /sys/auth/login
    - /sys/auth/logout*
    - /sys/auth/send/code
    - /sys/auth/mobile
    - /upload/**
    - /online/**
    - /druid/**
    - /actuator/**
    - /v3/api-docs/**
    - /webjars/**
    - /swagger/**
    - /swagger-resources/**
    - /swagger-ui.html
    - /swagger-ui/**
    - /favicon.ico
    - /doc.html
    - /
    web-ignore-resources:
    - "/public/**"
    - "/webjars/**"
    - "/v2/**"
    - "/swagger**"
    - "/static/**"
    - "/resources/**"
    - /favicon.ico
    - "/doc.html"
  # 文件服务器配置
#  storage:
#    type: minio
#    prefix: dream-single-server
#    minio:
#      access-key: admin
#      secret-key: admin123456
#      end-point: http://172.30.252.23:9001
#      bucket-name: public
  open-api:
    info:
      title: '单体Web开发系统API'
      description: '单体Web开发系统'
      version: 1.0
      terms-of-service: http://github.com/dreamFlyingFlower
      license:
        name: Apache 2.0
        url: http://github.com/dreamFlyingFlower
      contact:
        email: '582822832@qq.com'
        name: '飞花梦影'
        url: 'http://github.com/dreamFlyingFlower'
    
# easy trans 数据翻译组件
easy-trans:
  #启用redis缓存 如果不用redis请设置为false
  is-enable-redis: false
  #启用全局翻译(拦截所有responseBody进行自动翻译),如果对于性能要求很高可关闭此配置
  is-enable-global: true
  #启用平铺模式
  is-enable-tile: true

wx:
  miniapp:
    appid: wxa541cafd2c4093f9
    secret: e427d9a2a423e15360a8b26c360f34ab
    msg-data-format: JSON
    config-storage:
      redis:
        host: ${secret.redis.host}
        port:  ${secret.redis.port}
        password: ${secret.redis.password}
      type: redistemplate

mqtt:
  ip: tcp://124.207.254.168:11883
  username: admin
  password : bjdv2020
  qos: 1
  keep-alive: 30
  timeout: 60
  topics:
    - data/230ea8d0945cbd5c40b4ab01f977e084/v1
    - data/0078315db1993a634de5e213243dc51d/v1
    - data/f341fea3c5798be7affe0fc49dbed5ec/v1